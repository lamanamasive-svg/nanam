name: RDP with Bore

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Enable RDP
      shell: pwsh
      run: |
        # RDP servisini etkinleştir
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        
        # Windows Firewall'da RDP'ye izin ver
        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'
        
        # runneradmin kullanıcısı için şifre belirle
        Set-LocalUser -Name 'runneradmin' -Password (ConvertTo-SecureString -AsPlainText 'Pass123!' -Force)
        
        Write-Host "RDP başarıyla etkinleştirildi"

    - name: Download and Extract Bore
      shell: pwsh
      run: |
        # Bore'u indir
        Write-Host "Bore indiriliyor..."
        Invoke-WebRequest -Uri 'https://github.com/ekzhang/bore/releases/download/v0.5.0/bore-v0.5.0-x86_64-pc-windows-msvc.zip' -OutFile bore.zip
        
        # Arşivi çıkart
        Expand-Archive bore.zip -DestinationPath . -Force
        
        # bore.exe dosyasını bul ve ana dizine kopyala
        $exe = Get-ChildItem -Recurse -File -Filter 'bore.exe' | Select-Object -First 1
        if ($exe) { 
          Copy-Item $exe.FullName -Destination (Join-Path $PWD 'bore.exe') -Force 
          Write-Host "Bore başarıyla indirildi ve hazırlandı"
        } else {
          throw "bore.exe bulunamadı"
        }

    - name: Start Bore Tunnel and Display Connection Info
      shell: pwsh
      run: |
        $outputFile = Join-Path $PWD 'bore_output.txt'
        
        # Önceki çıktı dosyasını temizle
        if (Test-Path $outputFile) { Remove-Item $outputFile -Force }
        
        # Bore tünelini başlat
        Write-Host "Bore tüneli başlatılıyor..."
        $process = Start-Process -FilePath '.\bore.exe' -ArgumentList 'local 3389 --to bore.pub' -RedirectStandardOutput $outputFile -RedirectStandardError $outputFile -WindowStyle Hidden -PassThru
        
        # Port bilgisini yakala
        $port = $null
        $maxWaitTime = 120
        $startTime = Get-Date
        
        while (((Get-Date) - $startTime).TotalSeconds -lt $maxWaitTime) {
          if (Test-Path $outputFile) {
            $content = Get-Content $outputFile -Raw -ErrorAction SilentlyContinue
            
            # Farklı port formatlarını kontrol et
            if ($content -match 'bore\.pub:(\d+)') { 
              $port = $matches[1]
              break 
            }
            if ($content -match 'remote port(?:\s+is|\s+assigned\s+as|\s+assigned|:)?\s*(\d+)') { 
              $port = $matches[1]
              break 
            }
            if ($content -match 'assigned port:?\s*(\d+)') { 
              $port = $matches[1]
              break 
            }
            if ($content -match 'listening on bore\.pub:(\d+)') { 
              $port = $matches[1]
              break 
            }
          }
          Start-Sleep -Seconds 2
        }
        
        # Port bulunamazsa hata ver
        if (-not $port) {
          Write-Host "HATA: Bore portu tespit edilemedi!"
          Write-Host "Bore çıktısı:"
          if (Test-Path $outputFile) { 
            Get-Content $outputFile | ForEach-Object { Write-Host $_ }
          }
          throw "Bore portu bulunamadı - tünel başlatılamadı"
        }
        
        # Bağlantı bilgilerini göster
        $fullAddress = "bore.pub:$port"
        Write-Host ""
        Write-Host "=================================================="
        Write-Host "🔗 RDP BAĞLANTI BİLGİLERİ"
        Write-Host "=================================================="
        Write-Host "📍 Host Adresi    : $fullAddress"
        Write-Host "👤 Kullanıcı Adı  : runneradmin"
        Write-Host "🔐 Şifre          : Pass123!"
        Write-Host ""
        Write-Host "🖥️  REMMINA İÇİN:"
        Write-Host "   • Protokol: RDP"
        Write-Host "   • Sunucu: $fullAddress"
        Write-Host "   • Kullanıcı: runneradmin"
        Write-Host "   • Şifre: Pass123!"
        Write-Host "=================================================="
        Write-Host ""
        
        # Tünel durumunu kontrol et
        if ($process -and !$process.HasExited) {
          Write-Host "✅ Bore tüneli başarıyla çalışıyor (PID: $($process.Id))"
        } else {
          Write-Host "⚠️  Bore tüneli durumu belirsiz"
        }

    - name: Keep Session Alive
      shell: pwsh
      run: |
        Write-Host "🕐 Oturum 6 saat boyunca açık tutulacak..."
        Write-Host "⏰ Başlangıç zamanı: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        
        # Her 30 dakikada bir durum mesajı göster
        for ($i = 1; $i -le 720; $i++) {
          Start-Sleep -Seconds 30
          if ($i % 60 -eq 0) {
            $elapsed = $i / 2
            Write-Host "⏱️  Geçen süre: $elapsed dakika - Oturum hala aktif"
          }
        }
        
        Write-Host "⏰ Oturum süresi doldu: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
