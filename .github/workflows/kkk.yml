name: RDP with Ngrok

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'
          Set-LocalUser -Name 'runneradmin' -Password (ConvertTo-SecureString -AsPlainText 'Pass123!' -Force)
          Write-Host "✅ RDP etkinleştirildi"

      - name: Configure RDP Compatibility
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'SecurityLayer' -Value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'UserAuthentication' -Value 0
          Restart-Service TermService -Force
          Write-Host "✅ RDP uyumluluk ayarları yapıldı"

      - name: Download and Setup Ngrok
        shell: pwsh
        run: |
          Write-Host "📥 Ngrok indiriliyor..."
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath . -Force
          Write-Host "✅ Ngrok hazırlandı"

      - name: Start Ngrok Tunnel
        shell: pwsh
        run: |
          Write-Host "🚀 Ngrok tüneli başlatılıyor..."
          
          # Ngrok'u arka planda başlat
          $job = Start-Job -ScriptBlock {
            & .\ngrok.exe tcp 3389 --log stdout
          }
          
          # 15 saniye bekle
          Start-Sleep -Seconds 15
          
          # Ngrok API'sinden tunnel bilgisini al
          try {
            $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels" -Method Get
            $tunnel = $response.tunnels | Where-Object { $_.proto -eq "tcp" } | Select-Object -First 1
            
            if ($tunnel) {
              $publicUrl = $tunnel.public_url
              $host = $publicUrl -replace "tcp://", ""
              
              Write-Host ""
              Write-Host "=================================================="
              Write-Host "🔗 RDP BAĞLANTI BİLGİLERİ"
              Write-Host "=================================================="
              Write-Host "📍 Host: $host"
              Write-Host "👤 User: runneradmin"
              Write-Host "🔐 Pass: Pass123!"
              Write-Host ""
              Write-Host "🖥️ REMMINA AYARLARI:"
              Write-Host "   • Protokol: RDP"
              Write-Host "   • Sunucu: $host"
              Write-Host "   • Kullanıcı: runneradmin"
              Write-Host "   • Şifre: Pass123!"
              Write-Host ""
              Write-Host "🔧 XFREERDP KOMUTU:"
              Write-Host "   xfreerdp /v:$host /u:runneradmin /p:Pass123! /cert-ignore"
              Write-Host "=================================================="
            } else {
              Write-Host "❌ Tunnel bilgisi alınamadı"
            }
          } catch {
            Write-Host "❌ Ngrok API hatası: $($_.Exception.Message)"
          }

      - name: Keep Session Alive
        shell: pwsh
        run: |
          Write-Host "🕐 Oturum 6 saat açık kalacak..."
          Start-Sleep -Seconds 21600
